T = int(input())
answer = [int(input()) for _ in range(T)]

dp = [0 for _ in range(max(answer)+1)]
dp[1] = 1
dp[2] = 2
dp[3] = 4

for i in range(4, len(dp)):
    dp[i] = dp[i-1] + dp[i-2] + dp[i-3]

for a in answer:
    print(dp[a])

"""
완전 초보 dp 문제.. 근데 꽤 헷갈렸음

1~3 까지의 정수를 1, 2, 3으로 나타내 보면 (합을 나타낼 때는 수를 1개 이상 사용)
식의 개수는 [] 속에 나타내었다.

1 -> 1 [1]
2 -> 1+1, 2 [2]
3 -> 1+1+1, 1+2, 2+1, 3 [4]

그렇다면 4는 어떻게 나타낼까?
1을 나타내는 식들에 +3
2를 나타내는 식들에 +2
3을 나타내는 식들에 +1 
을 하면 1, 2, 3만으로 4의 합을 나타낼 수 있다.

4 ->1+(3) (1을 나타내는 식들 + 3) [1],
    1+1+(2), 2+(2) (2를 나타내는 식들 + 2) [2],
    1+1+1+(1), 1+2+(1), 2+1+(1), 3+(1) (3을 나타내는 식들 + 1) [4]
    총 개수 : [7]
    
그런데 이것들은 기존 식들에 +1, +2, +3 만을 한것이므로 식의 개수는 기존과 변함이 없다.
이것으로 일반식을 세울 수 있다.
A[n] = A[n-1], A[n-2], A[n-3] (n > 3)

ex) 5를 나타내는 식은 (이하 5식) 4식수 + 3식수 + 2식수 이다.
    5식 = (각 4식들 + 1) + (각 3식들 + 2) + (각 2식들 + 3)
    5식 = 7개 + 4개 + 2개 = 13개
    
1, 2, 3만을 사용하여 나타내기 떄문에 
구하려는 정수 N과 최대 3차이가 나는 정수부터 이미 구해져있는 값을 더해가는 것이 포인트이다
"""